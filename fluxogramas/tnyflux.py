# -*- coding: utf-8 -*-
"""tnyflux.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JNiRAU4wKcmYBsh8reJYbI_uwTBDlMAZ
"""

import matplotlib.pyplot as plt

# Define os blocos principais do fluxograma e suas descrições
blocos = [
    ("Início", "Oscilador"),
    ("Oscilador", "Pino BP/M"),
    ("Pino BP/M", "Proteção Térmica"),
    ("Proteção Térmica", "Circuito de Limite de Corrente"),
    ("Circuito de Limite de Corrente", "Função EN/UV"),
    ("Função EN/UV", "Fim"),
]

# Descrições detalhadas dos blocos
descricoes = {
    "Início": "Início",
    "Oscilador": "Oscilador (132 kHz, redução de EMI)",
    "Pino BP/M": "Pino BP/M (Limite de corrente, energia, proteção)",
    "Proteção Térmica": "Proteção Térmica (Desligamento por superaquecimento, reinício automático)",
    "Circuito de Limite de Corrente": "Limite de Corrente (Evita saturação, gerencia cargas)",
    "Função EN/UV": "Função EN/UV (Detecção de sub-tensão, controle de habilitação)",
    "Fim": "Fim",
}

# Criação da figura e eixos para o fluxograma
fig, ax = plt.subplots(figsize=(8, 6))
ax.axis('off')

# Posições e espaçamento para os blocos
posicoes = {
    "Início": (0.5, 0.9),
    "Oscilador": (0.5, 0.75),
    "Pino BP/M": (0.5, 0.6),
    "Proteção Térmica": (0.5, 0.45),
    "Circuito de Limite de Corrente": (0.5, 0.3),
    "Função EN/UV": (0.5, 0.15),
    "Fim": (0.5, 0.05),
}

# Desenha os blocos e conexões
for (inicio, fim) in blocos:
    x_inicio, y_inicio = posicoes[inicio]
    x_fim, y_fim = posicoes[fim]
    ax.text(x_inicio, y_inicio, descricoes[inicio], ha='center', va='center', bbox=dict(boxstyle="round", facecolor="skyblue"))
    ax.text(x_fim, y_fim, descricoes[fim], ha='center', va='center', bbox=dict(boxstyle="round", facecolor="lightgreen"))
    ax.annotate('', xy=(x_fim, y_fim + 0.05), xytext=(x_inicio, y_inicio - 0.05),
                arrowprops=dict(arrowstyle="->", color="black"))

# Exibe o fluxograma
plt.title("Fluxograma das Funcionalidades do TNY280PN", fontsize=14)
plt.show()
